<Activity mc:Ignorable="sap sap2010" x:Class="PurchaseOrderDataExtraction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:i="http://schemas.microsoft.com/netfx/2008/xaml/activities/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uiac="clr-namespace:UiPath.IntelligentOCR.Activities.Classification;assembly=UiPath.IntelligentOCR.Activities" xmlns:uiacv="clr-namespace:UiPath.IntelligentOCR.Activities.Classification.Validation;assembly=UiPath.IntelligentOCR.Activities" xmlns:uidc="clr-namespace:UiPath.IntelligentOCR.DocumentClassification;assembly=UiPath.IntelligentOCR" xmlns:uidc_1="clr-namespace:UiPath.IntelligentOCR.DocumentClassification;assembly=UiPath.IntelligentOCR.Activities" xmlns:uidce="clr-namespace:UiPath.IntelligentOCR.DocumentClassification.Extraction;assembly=UiPath.IntelligentOCR" xmlns:uiio="clr-namespace:UiPath.IntelligentOCR;assembly=UiPath.IntelligentOCR" xmlns:uico="clr-namespace:UiPath.IntelligentOCR.Core;assembly=UiPath.IntelligentOCR" xmlns:uist="clr-namespace:UiPath.SmartExtractor.Activities;assembly=UiPath.SmartExtractor.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Sequence DisplayName="PurchaseOrderDataExtraction" sap:VirtualizedContainerService.HintSize="840.4857142857143,1586.3714285714285" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="uiio:Document" Name="DigitizedDocument" />
      <Variable x:TypeArguments="s:String" Name="DocumentPath" />
      <Variable x:TypeArguments="s:String" Name="DocumentText" />
      <Variable x:TypeArguments="uico:Document" Name="ExtractedData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>

    <!-- Configure the file path to your purchase order document -->
    <Assign DisplayName="Assign Document Path" sap:VirtualizedContainerService.HintSize="798.8571428571428,62.857142857142854" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String">[DocumentPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String">["C:\Your\Path\To\PurchaseOrder.pdf"]</InArgument>
      </Assign.Value>
    </Assign>

    <!-- Step 1: Load a pre-defined taxonomy. You must create this in UiPath Studio beforehand. -->
    <uiio:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="798.8571428571428,78.28571428571428" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1">
      <uiio:LoadTaxonomy.Taxonomy>
        <InArgument x:TypeArguments="uico:DocumentTaxonomy">[YourTaxonomy]</InArgument>
      </uiio:LoadTaxonomy.Taxonomy>
    </uiio:LoadTaxonomy>

    <!-- Step 2: Digitize the document using an OCR engine. -->
    <uiio:DigitizeDocument DisplayName="Digitize Document" sap:VirtualizedContainerService.HintSize="798.8571428571428,247.42857142857142" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1" DocumentPath="[DocumentPath]">
      <uiio:DigitizeDocument.DocumentText>
        <OutArgument x:TypeArguments="s:String">[DocumentText]</OutArgument>
      </uiio:DigitizeDocument.DocumentText>
      <uiio:DigitizeDocument.DocumentObjectModel>
        <OutArgument x:TypeArguments="uiio:Document">[DigitizedDocument]</OutArgument>
      </uiio:DigitizeDocument.DocumentObjectModel>
      <uiio:DigitizeDocument.OCREngine>
        <!-- Place your chosen OCR engine here. For example: -->
        <!-- <ui:UiPathOcr ApiKey="{x:Null}" EndPoint="{x:Null}" Language="en" sap:VirtualizedContainerService.HintSize="200,64" sap2010:WorkflowViewState.IdRef="UiPathOcr_1" /> -->
        <!-- <ui:GoogleCloudVisionOcr ApiKey="{x:Null}" EndPoint="{x:Null}" Language="en" sap:VirtualizedContainerService.HintSize="200,64" sap2010:WorkflowViewState.IdRef="GoogleCloudVisionOcr_1" /> -->
      </uiio:DigitizeDocument.OCREngine>
    </uiio:DigitizeDocument>

    <!-- Step 3: Extract the data from the digitized document. -->
    <uiio:DataExtractionScope DisplayName="Data Extraction Scope" sap:VirtualizedContainerService.HintSize="798.8571428571428,499.4285714285714" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" DocumentText="[DocumentText]" DocumentTypeID="[YourTaxonomy.Get  DocumentTypeId('DocumentUnderstanding.PurchaseOrder')]" DocumentObjectModel="[DigitizedDocument]" Taxonomy="[YourTaxonomy]">
      <uiio:DataExtractionScope.DocumentData>
        <OutArgument x:TypeArguments="uico:Document">[ExtractedData]</OutArgument>
      </uiio:DataExtractionScope.DocumentData>
      <uiio:DataExtractionScope.ExtractionEngines>
        <scg:List x:TypeArguments="uico:IDocumentExtractionEngine" Capacity="4">
          <!-- Place your extractor here. The Smart Form Extractor is a good choice for structured documents like POs. -->
          <!-- You will need to train or configure it in UiPath Studio. -->
          <uist:SmartExtractor DisplayName="Smart Form Extractor" sap:VirtualizedContainerService.HintSize="200,24" sap2010:WorkflowViewState.IdRef="SmartExtractor_1" />
        </scg:List>
      </uiio:DataExtractionScope.ExtractionEngines>
      <uiio:DataExtractionScope.Extractors>
        <scg:List x:TypeArguments="uiio:DocumentExtraction.Extractor" Capacity="4">
          <!-- You must configure the fields you want to extract here. -->
          <!-- For example, to extract a field called "InvoiceNumber" you would have: -->
          <!-- <uiio:DocumentExtraction.Extractor.Fields>
               <x:String x:Key="DocumentUnderstanding.PurchaseOrder.InvoiceNumber">Smart Form Extractor</x:String>
               </uiio:DocumentExtraction.Extractor.Fields> -->
        </scg:List>
      </uiio:DataExtractionScope.Extractors>
    </uiio:DataExtractionScope>

    <!-- Step 4: Present the data for validation. Since you are not using Action Center, this will open a window on your desktop. -->
    <uiacv:PresentValidationStation DisplayName="Present Validation Station" sap:VirtualizedContainerService.HintSize="798.8571428571428,212.57142857142858" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" DocumentData="[ExtractedData]" DocumentObjectModel="[DigitizedDocument]" DocumentText="[DocumentText]" Taxonomy="[YourTaxonomy]">
      <uiacv:PresentValidationStation.ValidatedDocumentData>
        <OutArgument x:TypeArguments="uico:Document">[ExtractedData]</OutArgument>
      </uiacv:PresentValidationStation.ValidatedDocumentData>
    </uiacv:PresentValidationStation>

    <!-- Step 5: Export the results to a format you can use, like a DataTable. -->
    <uiio:ExportExtractionResults DisplayName="Export Extraction Results" sap:VirtualizedContainerService.HintSize="798.8571428571428,225.14285714285714" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" DocumentData="[ExtractedData]" Taxonomy="[YourTaxonomy]">
      <uiio:ExportExtractionResults.DocumentResults>
        <OutArgument x:TypeArguments="s:String">[ExtractedDataJson]</OutArgument>
      </uiio:ExportExtractionResults.DocumentResults>
      <uiio:ExportExtractionResults.DocumentResultsAsDataSet>
        <OutArgument x:TypeArguments="s:Data.DataSet">[ExtractedDataSet]</OutArgument>
      </uiio:ExportExtractionResults.DocumentResultsAsDataSet>
    </uiio:ExportExtractionResults>
  </Sequence>
</Activity>
